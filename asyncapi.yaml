asyncapi: 2.6.0
info:
  title: Game Engine WebSocket API
  description: WebSocket API documentation for the Game Engine project
  version: 1.0.0

servers:
  development:
    url: ws://localhost:8000/ws/
    protocol: ws
    description: Local development server

channels:
  /validate/:
    subscribe:
      summary: Receive validation messages
      message:
        $ref: '#/components/messages/ValidationMessage'
  
  /game/{gameId}/:
    parameters:
      gameId:
        description: The unique identifier of the game instance
        schema:
          type: string
          format: uuid
    subscribe:
      summary: Receive game updates
      message:
        oneOf:
          - $ref: '#/components/messages/ElementsUpdateMessage'
          - $ref: '#/components/messages/GameStateMessage'
          - $ref: '#/components/messages/SettingsUpdateMessage'
          
  /waitingroom/{gameId}/:
    parameters:
      gameId:
        description: The unique identifier of the game instance
        schema:
          type: string
          format: uuid
    subscribe:
      summary: Receive waiting room updates
      message:
        oneOf:
          - $ref: '#/components/messages/SettingsUpdateMessage'
          - $ref: '#/components/messages/WaitingRoomUpdateMessage'

components:
  messages:
    ValidationMessage:
      name: validationMessage
      title: Validation Message
      summary: A simple message to validate WebSocket connection
      contentType: application/json
      payload:
        type: object
        properties:
          message_type:
            type: string
            enum: [validation]
          message:
            type: string
            description: A validation message
            example: "WebSocket connection validated"
          user_id:
            type: integer
            description: ID of the user receiving the validation message
          timestamp:
            type: string
            format: date-time
            description: The time when the message was sent
    
    SettingsUpdateMessage:
      name: settingsUpdateMessage
      title: Settings Update Message
      summary: Updates for game settings in the waiting room
      contentType: application/json
      payload:
        type: object
        properties:
          message_type:
            type: string
            enum: [settings_update]
          game_settings:
            type: object
            description: The updated game settings
          updated_by:
            type: object
            properties:
              id:
                type: integer
                description: ID of the user who updated the settings
              username:
                type: string
                description: Username of the user who updated the settings
          timestamp:
            type: string
            format: date-time
            description: The time when the message was sent
            
    WaitingRoomUpdateMessage:
      name: waitingRoomUpdateMessage
      title: Waiting Room Update Message
      summary: Comprehensive updates for waiting room state including player list and settings
      contentType: application/json
      payload:
        type: object
        properties:
          message_type:
            type: string
            enum: [waitingroom_update]
          game_data:
            type: object
            description: Complete game data including players and settings
            properties:
              id:
                type: string
                format: uuid
                description: The game instance ID
              instance_name:
                type: string
                description: Name of the game instance
              status:
                type: string
                enum: [pending, ongoing, ended]
                description: Current status of the game
              joined_users:
                type: array
                description: List of users who have joined the game
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: User ID
                    username:
                      type: string
                      description: Username
                    is_creator:
                      type: boolean
                      description: Whether this user created the game
              game_settings:
                type: object
                description: Current game settings
          timestamp:
            type: string
            format: date-time
            description: The time when the message was sent

# Django Channels Configuration
# ----------------------------
# This section documents the Django Channels group naming conventions and organization.
# Note: This is not part of the AsyncAPI specification but serves as documentation for developers.
#
# Channel Groups:
# 1. User-specific groups:
#    - Format: user_{user_id}
#    - Purpose: Send messages to specific users
#    - Usage: Used for validation messages and user-specific game updates
#    - Function: get_user_group_name(user_id)
#
# 2. Game-specific groups:
#    - Format: game_{game_id}
#    - Purpose: Send messages to all users in a specific game
#    - Usage: Used for game state updates and element updates
#    - Function: get_game_group_name(game_id)
#
# 3. Waiting room groups:
#    - Format: waiting_room_{game_id}
#    - Purpose: Send messages to all users in a waiting room
#    - Usage: Used for player join/leave notifications and game start events
#    - Function: get_waiting_room_group_name(game_id)
#
# Channel Group Management:
# - All group name generation should be centralized in the channel_groups.py file
# - Never hardcode channel group names in WebSocket consumers or messaging functions
# - Use the functions from channel_groups.py to generate consistent group names
    
    ElementsUpdateMessage:
      name: elementsUpdateMessage
      title: Elements Update Message
      summary: Updates for game elements (e.g., towers, enemies, etc.)
      contentType: application/json
      payload:
        type: object
        properties:
          message_type:
            type: string
            enum: [elems_update]
          list_items:
            type: array
            description: List of updated game elements
            items:
              type: object
              properties:
                id:
                  type: string
                  description: Unique identifier for the element
                type:
                  type: string
                  description: Type of the element (e.g., tower, enemy)
                position:
                  type: object
                  properties:
                    x:
                      type: number
                    y:
                      type: number
                state:
                  type: string
                  description: Current state of the element
                properties:
                  type: object
                  description: Additional properties specific to the element type
          timestamp:
            type: string
            format: date-time
            description: The time when the message was sent
    
    GameStateMessage:
      name: gameStateMessage
      title: Game State Message
      summary: Updates for the overall game state
      contentType: application/json
      payload:
        type: object
        properties:
          message_type:
            type: string
            enum: [game_state]
          game_state:
            type: object
            properties:
              status:
                type: string
                enum: [active, paused, won, lost]
                description: Current status of the game
              resources:
                type: object
                properties:
                  lives:
                    type: integer
                    description: Remaining lives
                  money:
                    type: integer
                    description: Available money/currency
                  score:
                    type: integer
                    description: Current score
              wave:
                type: integer
                description: Current wave number
              time_remaining:
                type: integer
                description: Time remaining in seconds (if applicable)
          timestamp:
            type: string
            format: date-time
            description: The time when the message was sent
